import { useMemo, useRef, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Box, Text } from "@mantine/core";
import { Editor } from "@tinymce/tinymce-react";

// import RichTextEditor from "../components/RichText";

const Home: NextPage = () => {
  // const [value, setValue] = useState("Hello world");
  // const modules = useMemo(
  //   () => ({
  //     history: { delay: 2500, userOnly: true },
  //     // syntax: true,
  //   }),
  //   []
  // );
  const editorRef = useRef<any>(null);

  return (
    <div>
      <Head>
        <title>Liberal</title>
        <meta
          name="description"
          content="Generated by create next app"
          charSet="utf-8"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Box
          sx={(theme) => ({
            height: "100vh",
            padding: "50px",
            backgroundColor:
              theme.colorScheme === "dark"
                ? theme.colors.dark[5]
                : theme.colors.gray[0],
          })}
        >
          {/* <RichTextEditor
            sx={() => ({
              height: "100%",
            })}
            value={value}
            onChange={setValue}
            modules={modules}
          /> */}
          <Editor
            onInit={(evt, editor) => (editorRef.current = editor)}
            initialValue="<p>This is the initial content of the editor.</p>"
            init={{
              height: 500,
              menubar: false,
              plugins: [
                "advlist autolink lists link image charmap print preview anchor",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table paste code help wordcount",
              ],
              toolbar:
                "undo redo | formatselect | " +
                "bold italic backcolor | alignleft aligncenter " +
                "alignright alignjustify | bullist numlist outdent indent | " +
                "removeformat | help",
              content_style:
                "body { font-family:Helvetica,Arial,sans-serif; font-size:14px }",
            }}
          />
        </Box>
      </main>
      <Box
        sx={(theme) => ({
          display: "flex",
          flex: 1,
          padding: "2rem 0",
          borderTop: "1px solid black",
          justifyContent: "center",
          alignItems: "center",
          backgroundColor:
            theme.colorScheme === "dark"
              ? theme.colors.dark[4]
              : theme.colors.gray[1],
        })}
      >
        <Text
          variant="link"
          component="a"
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          rel="noopener noreferrer"
          sx={() => ({
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            flexGrow: 1,
            color: "white",
          })}
        >
          Powered by{" "}
          <Text
            component="span"
            sx={() => ({
              height: "1em",
              marginLeft: "0.5rem",
            })}
          >
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </Text>
        </Text>
      </Box>
    </div>
  );
};

export default Home;

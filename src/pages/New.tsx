import { useEffect, useRef } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { Box, Button } from "@mantine/core";
import { useNotifications } from "@mantine/notifications";
import { Check, FileUpload, X } from "tabler-icons-react";
import { useLogin } from "@soul-project/react-soul-utils";

import useEditor from "../hooks/useEditor";
import NavigationBar from "../components/NavigationBar";
import Footer from "../components/Footer";
import Page from "../components/Page";

const New: NextPage = () => {
  const notifications = useNotifications();
  const titleInputRef = useRef<HTMLInputElement>(null);

  useEffect(() => {
    if (titleInputRef.current) titleInputRef.current.focus();
  }, []);

  const { userCredentials, login, logout, isLoggingIn } = useLogin({
    platformId: 2,
    callback: "http://localhost:3000",
  });

  const {
    Editor,
    publish,
    contentValue,
    setContentValue,
    canPublish,
    isPublishing,
    Title,
    titleValue,
    setTitleValue,
  } = useEditor({
    onSuccess: () => {
      notifications.showNotification({
        title: "Post submitted",
        message: "Your article will be made available soon",
        icon: <Check size={18} />,
        color: "teal",
      });
    },
    onError: () => {
      notifications.showNotification({
        title: "Post failed",
        message: "Something went wrong",
        icon: <X size={18} />,
        color: "red",
      });
    },
    userToken: userCredentials?.token,
  });

  return (
    <div>
      <Head>
        <title>Liberal</title>
        <meta
          name="description"
          content="Generated by create next app"
          charSet="utf-8"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Page>
          <NavigationBar
            username={userCredentials?.username}
            onLogin={login}
            onLogout={logout}
            isLoggingIn={isLoggingIn}
            primaryButton={
              <Button
                onClick={() => publish()}
                color="teal"
                disabled={!canPublish}
                loading={isPublishing}
                rightIcon={<FileUpload />}
              >
                Publish
              </Button>
            }
          />
          <Box
            sx={() => ({
              padding: "10px 30px 30px 30px",
            })}
          >
            <Box
              sx={() => ({
                maxWidth: "800px",
                display: "block",
                marginLeft: "auto",
                marginRight: "auto",
              })}
            >
              <Title
                value={titleValue}
                onChange={setTitleValue}
                ref={titleInputRef}
              />
              <Editor value={contentValue} onChange={setContentValue} />
            </Box>
          </Box>
        </Page>
      </main>
      <Footer />
    </div>
  );
};

export default New;

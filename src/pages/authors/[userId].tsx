import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  Box,
  Button,
  Text,
  Pagination,
  Divider,
  Stack,
  Loader,
} from "@mantine/core";
import { useLogin } from "@soul-project/react-soul-utils";
import { File } from "tabler-icons-react";
import { useQuery } from "react-query";

import NavigationBar from "src/components/NavigationBar";
import Footer from "src/components/Footer";
import Page from "src/components/Page";
import usePagination from "src/hooks/usePagination";

const Author: NextPage = () => {
  const router = useRouter();
  const { userId } = router.query;

  const { data } = useQuery(
    [`/api/authors/posts`, userId],
    async () => {
      const { data } = await axios.get<{ posts: Post[]; totalCount: number }>(
        `/api/authors/${userId}/posts`,
        { params: { page: 1, numItemsPerPage: 10 } }
      );
      return data;
    },
    { enabled: !!userId }
  );

  const { data: authorData } = useQuery(
    [`/api/authors/`, userId],
    async () => {
      const { data } = await axios.get<{ username: string }>(
        `/api/authors/${userId}`
      );
      return data;
    },
    { enabled: !!userId }
  );

  const { userCredentials, login, logout, isLoggingIn } = useLogin({
    platformId: 2,
    callback: "http://localhost:3000",
  });

  const { page, setPage, totalPages } = usePagination(
    data?.totalCount || 0,
    router
  );

  return (
    <div>
      <Head>
        <title>Liberal</title>
        <meta
          name="description"
          content="Generated by create next app"
          charSet="utf-8"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Page>
          <NavigationBar
            username={userCredentials?.username}
            onLogin={login}
            onLogout={logout}
            isLoggingIn={isLoggingIn}
            primaryButton={
              <Button component="a" href="/new" rightIcon={<File />}>
                New Article
              </Button>
            }
          />
          <Box
            sx={() => ({
              maxWidth: "800px",
              display: "block",
              marginLeft: "auto",
              marginRight: "auto",
            })}
          >
            <Text
              sx={() => ({
                color: "white",
                fontSize: "30px",
              })}
            >
              {authorData?.username}
            </Text>
            <Divider my="sm" />
            {data ? (
              <Box>
                <Stack>
                  {data.posts.map((post) => (
                    <Box key={post.cid} component="a" href="/">
                      <Text color="white" weight="bold">
                        {post.title}
                      </Text>
                      <Text color="white">This is a cool description</Text>
                    </Box>
                  ))}
                </Stack>
                <Pagination
                  total={totalPages}
                  page={page}
                  onChange={setPage}
                  sx={() => ({ marginTop: "30px" })}
                />
              </Box>
            ) : (
              <Loader />
            )}
          </Box>
        </Page>
      </main>
      <Footer />
    </div>
  );
};

export default Author;

type Post = {
  cid: string;
  title: string;
};
